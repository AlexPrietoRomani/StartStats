% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_groups.R
\name{generate_groups}
\alias{generate_groups}
\title{Análisis de Comparaciones Múltiples Post-Hoc para Agrupamiento}
\usage{
generate_groups(
  data,
  var_original,
  var_transformada = NULL,
  formula_interaccion = "GenTrat",
  method = c("tukey", "games_howell", "duncan", "dunn", "dunnett"),
  dunn_p_adjust_method = "bonferroni",
  control_group = NULL,
  verbose = TRUE
)
}
\arguments{
\item{data}{Un dataframe que contiene las variables necesarias para el análisis.}

\item{var_original}{Un string, el nombre de la columna en \code{data} que representa
la variable respuesta original (sin transformar). Esta variable se usará
para calcular las medias (o medianas) que se mostrarán en la salida final.
\strong{Obligatorio.}}

\item{var_transformada}{Un string, el nombre de la columna en \code{data} que representa
la variable respuesta transformada (o la misma \code{var_original} si no hay
transformación). Esta variable se usará para realizar las pruebas post-hoc
y obtener los grupos de letras. Si es \code{NULL} (valor por defecto),
\code{var_original} se utilizará para este propósito.}

\item{formula_interaccion}{Un string, el nombre de la columna en \code{data} que
representa el factor cuyos niveles serán comparados y agrupados.
Por defecto es "GenTrat" (Genotipo x Tratamiento, un nombre común en agronomía).}

\item{method}{Un string que especifica el método de prueba post-hoc a utilizar.
Puede ser:
\itemize{
\item \code{"tukey"}: Tukey HSD para ANOVA (paramétrica, asume normalidad y homocedasticidad).
Utiliza \code{agricolae::HSD.test}. Para más detalles, ver Steel et al. (1997).
\item \code{"games_howell"}: Games-Howell para ANOVA (paramétrica, robusta ante violación de homocedasticidad).
Utiliza \code{rstatix::games_howell_test}.
\item \code{"duncan"}: Duncan's Multiple Range Test (paramétrica, compara todos los pares, a menudo más liberal que Tukey).
Utiliza \code{agricolae::duncan.test}. Para más detalles, ver Steel et al. (1997).
\item \code{"dunn"}: Dunn's Test (no paramétrica, para Kruskal-Wallis, útil para datos ordinales o no normales). La medida de centralidad en la salida será la mediana.
Utiliza \code{rstatix::dunn_test}. Para más detalles, ver Dunn (1964).
\item \code{"dunnett"}: Dunnett's Test (paramétrica, compara múltiples grupos contra un único grupo control). Requiere especificar \code{control_group}.
Utiliza \code{DescTools::DunnettTest}.
}
Por defecto es "tukey".}

\item{dunn_p_adjust_method}{Un string, el método de ajuste de p-valores a usar
con el método \code{"dunn"}. Opciones comunes incluyen \code{"bonferroni"}, \code{"holm"},
\code{"fdr"} (Benjamini-Hochberg). Por defecto es \code{"bonferroni"}. Ignorado para otros métodos.}

\item{control_group}{Un string, el nombre del nivel del factor
\code{formula_interaccion} que se considera el grupo control. \strong{Obligatorio si
\code{method = "dunnett"}}. Ignorado para otros métodos.}

\item{verbose}{Un valor lógico (\code{TRUE}/\code{FALSE}). Si es \code{TRUE}, la función imprimirá
mensajes de progreso y advertencias detalladas en la consola. Si es \code{FALSE},
operará de forma "silenciosa" (solo errores fatales detendrán la ejecución).
Por defecto es \code{TRUE}.}
}
\value{
Un tibble con tres columnas:
\describe{
\item{interaccion}{Los niveles únicos del factor \code{formula_interaccion}.}
\item{means}{Las medias de la \code{var_original} para cada nivel de \code{interaccion}.
\strong{Nota}: Si \code{method = "dunn"}, esta columna contendrá las medianas de la \code{var_original},
ya que la mediana es la medida de centralidad más apropiada para datos ordinales/no paramétricos.}
\item{groups}{Las letras de agrupamiento asignadas a cada nivel de \code{interaccion}
basadas en las comparaciones de la \code{var_transformada} (o \code{var_original} si no se transformó)
según el \code{method} elegido. Para \code{method = "dunnett"}, las letras reflejan
la significancia estadística solo en comparación con el \code{control_group}.}
}
En caso de que una prueba no pueda realizarse para una variable (ej. no hay suficientes grupos),
la función intentará manejar el error y devolverá una tabla vacía con advertencia.
}
\description{
\code{generate_groups} realiza pruebas post-hoc de comparaciones múltiples
(Tukey HSD, Games-Howell, Duncan, Dunn o Dunnett) para agrupar los niveles
de un factor (\code{formula_interaccion}) basado en una variable respuesta.
La función permite obtener grupos de letras para una variable transformada
y presentar las medias (o medianas) de la variable original, lo cual es
común en análisis donde se realizan transformaciones de datos para cumplir
supuestos estadísticos.
}
\details{
La función maneja automáticamente los valores \code{NA} filtrando las filas que contienen
\code{NA} en las variables de interés antes de realizar los análisis.
También "droplevels" los factores para evitar problemas con niveles vacíos.
Los \code{tryCatch} se usan para aumentar la robustez de la función, permitiendo que
continúe la ejecución y emita advertencias en lugar de detenerse completamente
si una prueba post-hoc falla por condiciones inusuales de los datos.

\strong{Referencias:}
\itemize{
\item Dunn, O. J. (1964). Multiple comparisons using rank sums. \emph{Technometrics}, 6(3), 241-252.
\item Steel, R. G. D., Torrie, J. H., & Dickey, D. A. (1997). \emph{Principles and Procedures of Statistics: A Biometrical Approach} (3rd ed.). McGraw-Hill.
\item Piepho, H. P. (2004). An algorithm for a letter-based representation of all-pairwise comparisons. \emph{Journal of Computational and Graphical Statistics}, 13(2), 456-466.
}
}
\examples{
# Crear datos de ejemplo
set.seed(123)
df_ejemplo <- data.frame(
  genotipo = rep(c("G1", "G2", "G3", "G4", "Control"), each = 20),
  rendimiento = c(rnorm(20, 50, 5), rnorm(20, 55, 5), rnorm(20, 45, 5), rnorm(20, 70, 5), rnorm(20, 52, 5)),
  rendimiento_log = c(log(rnorm(20, 50, 5)), log(rnorm(20, 55, 5)), log(rnorm(20, 45, 5)), log(rnorm(20, 70, 5)), log(rnorm(20, 52, 5))),
  sabor_score = sample(1:5, 100, replace = TRUE, prob = c(0.1, 0.2, 0.3, 0.2, 0.2))
)
# Introducir algunos outliers y NAs para probar robustez
df_ejemplo$rendimiento[c(5, 25, 45, 85)] <- c(10, 100, NA, 15)
df_ejemplo$sabor_score[c(10, 30, 90)] <- NA

# Ejemplo 1: Tukey HSD con variable transformada
\dontrun{
grupos_tukey <- generate_groups(
  data = df_ejemplo,
  var_original = "rendimiento",
  var_transformada = "rendimiento_log",
  formula_interaccion = "genotipo",
  method = "tukey",
  verbose = TRUE
)
print(grupos_tukey)
}

# Ejemplo 2: Games-Howell (misma variable para original y transformada)
\dontrun{
grupos_gh <- generate_groups(
  data = df_ejemplo,
  var_original = "rendimiento",
  formula_interaccion = "genotipo", # var_transformada se usa como rendimiento
  method = "games_howell",
  verbose = FALSE # Salida más limpia en consola
)
print(grupos_gh)
}

# Ejemplo 3: Dunn Test para variable ordinal (sabor_score) con ajuste Bonferroni
\dontrun{
grupos_dunn_bonf <- generate_groups(
  data = df_ejemplo,
  var_original = "sabor_score",
  formula_interaccion = "genotipo",
  method = "dunn",
  dunn_p_adjust_method = "bonferroni", # Explicitamente Bonferroni
  verbose = TRUE
)
print(grupos_dunn_bonf)
}

# Ejemplo 4: Duncan's Multiple Range Test
\dontrun{
grupos_duncan <- generate_groups(
  data = df_ejemplo,
  var_original = "rendimiento",
  formula_interaccion = "genotipo",
  method = "duncan",
  verbose = TRUE
)
print(grupos_duncan)
}

# Ejemplo 5: Dunnett's Test (comparando contra el grupo "Control")
\dontrun{
grupos_dunnett <- generate_groups(
  data = df_ejemplo,
  var_original = "rendimiento",
  formula_interaccion = "genotipo",
  method = "dunnett",
  control_group = "Control", # Especificar el grupo control
  verbose = TRUE
)
print(grupos_dunnett)
}
}
